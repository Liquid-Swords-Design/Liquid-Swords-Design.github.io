{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["StyledContainer","styled","div","ImagesContainer","section","PostFeed","Blog","data","location","pageContext","useState","isActive","setIsActive","posts","allGhostPost","edges","className","map","idx","node","key","id","image","feature_image","handleImageChange","post","pageQuery"],"mappings":"4FAAA,0HAQMA,EAAkBC,IAAOC,IAAV,wEAAGD,CAAH,6HAafE,EAAkBF,IAAOG,QAAV,wEAAGH,CAAH,gKAefI,EAAWJ,IAAOG,QAAV,iEAAGH,CAAH,kGAwDCK,UA7CF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAAkB,EAChBC,mBAAS,GAAlCC,EADyC,KAC/BC,EAD+B,KAE1CC,EAAQN,EAAKO,aAAaC,MAEhC,OACE,oCACE,kBAAC,IAAD,CAAUP,SAAUA,IACpB,kBAAC,IAAD,KACE,kBAACR,EAAD,CAAiBgB,UAAU,aACzB,kBAACb,EAAD,KACGU,EAAMI,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,cACZZ,SAAUO,IAAQP,QAIxB,kBAACN,EAAD,KACGQ,EAAMI,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CACEK,kBAAmBZ,EACnBQ,IAAKD,EAAKE,GACVI,KAAMN,EACND,IAAKA,QAIX,kBAAC,IAAD,CAAYT,YAAaA,QAqB5B,IAAMiB,EAAS","file":"component---src-templates-blog-js-02616f7807b2c985b692.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Layout from '../components/layout'\nimport { Pagination, PostCard, FeaturedImage } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\nconst StyledContainer = styled.div`\n  background: white;\n  padding: 0 2rem;\n  display: flex;\n  flex-direction: column;\n  padding-top: 7rem;\n  overflow: scroll;\n\n  & figure {\n    margin: 0;\n  }\n`\n\nconst ImagesContainer = styled.section`\n  position: relative;\n  margin-right: 2rem;\n  position: fixed;\n  display: block;\n  width: 45vw;\n  top: 0em;\n  padding: 0;\n  margin: 7rem 2rem 0 0;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst PostFeed = styled.section`\n  padding: 0;\n  padding-left: 50vw;\n  height: 100%;\n  width: 100%;\n\n  @media (max-width: 768px) {\n    padding-left: 0;\n  }\n`\n\nconst Blog = ({ data, location, pageContext }) => {\n  const [isActive, setIsActive] = useState(0)\n  const posts = data.allGhostPost.edges\n\n  return (\n    <>\n      <MetaData location={location} />\n      <Layout>\n        <StyledContainer className=\"container\">\n          <ImagesContainer>\n            {posts.map(({ node }, idx) => (\n              <FeaturedImage\n                key={node.id}\n                image={node.feature_image}\n                isActive={idx === isActive ? true : false}\n              />\n            ))}\n          </ImagesContainer>\n          <PostFeed>\n            {posts.map(({ node }, idx) => (\n              <PostCard\n                handleImageChange={setIsActive}\n                key={node.id}\n                post={node}\n                idx={idx}\n              />\n            ))}\n          </PostFeed>\n          <Pagination pageContext={pageContext} />\n        </StyledContainer>\n      </Layout>\n    </>\n  )\n}\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allGhostPost: PropTypes.object.isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  pageContext: PropTypes.object,\n}\n\nexport default Blog\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n  query GhostPostQuery($skip: Int!, $limit: Int!) {\n    allGhostPost(\n      sort: { order: DESC, fields: [created_at] }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          ...GhostPostFields\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}