{"version":3,"sources":["webpack:///./src/components/common/ProjectCard.js","webpack:///./src/pages/projects.js"],"names":["StyledLink","styled","AniLink","ProjectCard","title","featured_image","url","slug","to","cover","bg","direction","className","animateIn","delay","fluid","alt","ProjectsContainer","div","ProjectsList","ul","projectsQuery","Projects","edges","data","allMarkdownRemark","themeColor","map","edge","node","frontmatter","featuredImage","key","childImageSharp"],"mappings":"+QAMMA,EAAaC,YAAOC,KAAV,8EAAGD,CAAH,uCAuCDE,EAlCK,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,eACtBC,EAAG,aAD8C,EAAXC,KAG5C,OACE,kBAACP,EAAD,CACEQ,GAAIF,EACJG,OAAK,EACLC,GAAI,QACJC,UAAU,QACVC,UAAU,gBAEV,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,qBACZP,EACC,yBAAKO,UAAU,UACb,kBAAC,IAAD,CAAiBC,UAAU,aAAaC,MAAO,KAC7C,4BAAQF,UAAU,gCAChB,kBAAC,IAAD,CAAKG,MAAOV,EAAgBW,IAAKZ,OAIrC,MAEN,yBAAKQ,UAAU,wBACb,wBAAIA,UAAU,uBAAuBR,GACrC,yBAAKQ,UAAU,qBACb,kDC9BNK,EAAoBhB,IAAOiB,IAAV,kFAAGjB,CAAH,qCAKjBkB,EAAelB,IAAOmB,GAAV,6EAAGnB,CAAH,2MAwDLoB,GAFEC,UA/BE,SAAC,GAIX,IAFkBC,EAEnB,EAHJC,KACEC,kBAAqBF,MAGvB,OACE,kBAAC,IAAD,CAAQG,WAAW,SACjB,kBAACT,EAAD,KACE,wCACA,kBAACE,EAAD,KACGI,GACC,sBAAIA,GAAJ,YAAcA,GAAd,YAAwBA,GAAxB,YAAkCA,IAAOI,KAAI,SAAAC,GAAS,IAAD,EACZA,EAAKC,KAAKC,YAAzC1B,EAD2C,EAC3CA,MAAO2B,EADoC,EACpCA,cAAexB,EADqB,EACrBA,KAC9B,OACE,wBAAIyB,IAAKzB,GACP,kBAAC,IAAD,CAAiBM,UAAU,YACzB,kBAAC,EAAD,CACET,MAAOA,EACPG,KAAMA,EACNF,eAAgB0B,EAAcE,gBAAgBlB,iBAc1C","file":"component---src-pages-projects-js-d7deb5530889aa1511a1.js","sourcesContent":["import React from 'react'\nimport Img from 'gatsby-image'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\nimport styled from 'styled-components'\nimport ScrollAnimation from 'react-animate-on-scroll'\n\nconst StyledLink = styled(AniLink)`\n  text-decoration: none;\n  color: black;\n`\n\nconst ProjectCard = ({ title, featured_image, slug }) => {\n  const url = `/projects/${slug}`\n\n  return (\n    <StyledLink\n      to={url}\n      cover\n      bg={'black'}\n      direction=\"right\"\n      className=\"project-card\"\n    >\n      <div className=\"project-card__container\">\n        <div className=\"project-card__top\">\n          {featured_image ? (\n            <div className=\"scaler\">\n              <ScrollAnimation animateIn=\"scale-down\" delay={150}>\n                <figure className=\"project-card__featured-image\">\n                  <Img fluid={featured_image} alt={title} />\n                </figure>\n              </ScrollAnimation>\n            </div>\n          ) : null}\n        </div>\n        <div className=\"project-card__bottom\">\n          <h2 className=\"project-card__title\">{title}</h2>\n          <div className=\"project-card__cta\">\n            <span>See project</span>\n          </div>\n        </div>\n      </div>\n    </StyledLink>\n  )\n}\n\nexport default ProjectCard\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport ScrollAnimation from 'react-animate-on-scroll'\nimport Layout from '../components/layout'\nimport ProjectCard from '../components/common/ProjectCard'\nimport styled from 'styled-components'\n\nconst ProjectsContainer = styled.div`\n  margin-top: 5rem;\n  padding: 0 2rem;\n`\n\nconst ProjectsList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  li {\n    flex-basis: 50%;\n\n    &:nth-child(even) {\n      padding-top: 6rem;\n\n      &:nth-child(even) {\n        padding-top: 3rem;\n      }\n    }\n\n    @media (max-width: 768px) {\n      flex-basis: 100%;\n      padding-top: 3rem;\n    }\n  }\n`\n\nconst Projects = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  return (\n    <Layout themeColor=\"white\">\n      <ProjectsContainer>\n        <h1>Projects</h1>\n        <ProjectsList>\n          {edges &&\n            [...edges, ...edges, ...edges, ...edges].map(edge => {\n              const { title, featuredImage, slug } = edge.node.frontmatter\n              return (\n                <li key={slug}>\n                  <ScrollAnimation animateIn=\"fadeInUp\">\n                    <ProjectCard\n                      title={title}\n                      slug={slug}\n                      featured_image={featuredImage.childImageSharp.fluid}\n                    />\n                  </ScrollAnimation>\n                </li>\n              )\n            })}\n        </ProjectsList>\n      </ProjectsContainer>\n    </Layout>\n  )\n}\n\nexport default Projects\n\nexport const projectsQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}