{"version":3,"sources":["webpack:///./src/components/slicer.js","webpack:///./src/templates/project.js"],"names":["StyledWord","styled","span","props","transitionDelay","Slicer","children","useState","loaded","setLoaded","words","split","useEffect","map","word","idx","className","key","NavLink","AniLink","Project","data","location","pageContext","markdownRemark","frontmatter","featuredImage","title","client","images","services","html","themeColor","item","service","fluid","childImageSharp","dangerouslySetInnerHTML","__html","node","image","image_alt","half_image","animateIn","alt","previousProject","cover","bg","direction","to","slug","style","backgroundImage","original","src","nextProject","pageQuery"],"mappings":"8FAAA,yBAGMA,EAHN,UAGmBC,EAAOC,KAAV,qEAAGD,CAAH,yWAiBQ,SAAAE,GAAK,OACvBA,EAAMC,gBAAkBD,EAAMC,gBAAkB,KAkCvCC,IAzBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,oBAAS,GAA9BC,EADwB,KAChBC,EADgB,KAEzBC,EAAQJ,EAASK,MAAM,KAM7B,OAJAC,qBAAU,WACRH,GAAU,KACT,IAGD,oCACGC,EAAMG,KAAI,SAACC,EAAMC,GAChB,OACE,kBAACf,EAAD,CACEgB,UAAS,SAAUR,EAAS,cAAgB,cAC5CJ,gBAAuB,IAANW,EACjBE,IAAKH,GAEL,8BAAOA,U,kCC/CnB,6KASMI,EAAUjB,YAAOkB,KAAV,sEAAGlB,CAAH,qHA4HEmB,UAjHC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAkC,KAA5BC,SAA4B,EAAlBC,YAO7BF,EAAKG,eAAeC,aALtBC,EAFiD,EAEjDA,cACAC,EAHiD,EAGjDA,MACAC,EAJiD,EAIjDA,OACAC,EALiD,EAKjDA,OACAC,EANiD,EAMjDA,SAEMC,EAASV,EAAKG,eAAdO,KAER,OACE,kBAAC,IAAD,CAAQC,WAAW,SACjB,yBAAKhB,UAAU,gBACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,uBACZ,kBAAC,IAAD,KAASW,KAGb,yBAAKX,UAAU,uBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,wBACb,uCACA,8BAAOY,IAET,yBAAKZ,UAAU,0BACb,yCACA,wBAAIA,UAAU,+BACXc,GACCA,EAASjB,KAAI,SAAAoB,GACX,OAAO,4BAAKA,EAAKC,iBAO/B,kBAAC,IAAD,CAAKC,MAAOT,EAAcU,gBAAgBD,QAC1C,yBAAKnB,UAAU,oBACb,yBACEA,UAAU,eACVqB,wBAAyB,CAAEC,OAAQP,KAErC,wBAAIf,UAAU,wBACXa,EAAOhB,KAAI,SAAA0B,GAAS,IACXC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,WAC1B,OACE,wBACE1B,UAAW0B,EAAa,mBAAqB,oBAE7C,kBAAC,IAAD,CAAiBzB,IAAG,GAAKwB,EAAaE,UAAU,YAC9C,kBAAC,IAAD,CAAKR,MAAOK,EAAMJ,gBAAgBD,MAAOS,IAAKH,WAO1D,6BACE,yBAAKzB,UAAU,+BACb,yBAAKA,UAAU,gCACZK,EAAKwB,iBACJ,oCACE,kBAAC3B,EAAD,CACE4B,OAAK,EACLC,GAAI,QACJC,UAAU,QACVC,GAAE,aAAe5B,EAAKwB,gBAAgBpB,YAAYyB,MAElD,wBAAIlC,UAAU,sCACXK,EAAKwB,gBAAgBpB,YAAYE,OAEpC,0BAAMX,UAAU,aAAhB,YACA,0BAAMA,UAAU,cAAhB,KACA,yBACEA,UAAU,0CACVmC,MAAO,CACLC,gBAAgB,OAAQ/B,EAAKwB,gBAAgBpB,YAAYC,cAAcU,gBAAgBiB,SAASC,IAAjF,UAO3B,yBAAKtC,UAAU,4BACZK,EAAKkC,aACJ,oCACE,kBAACrC,EAAD,CACE4B,OAAK,EACLC,GAAI,QACJC,UAAU,QACVC,GAAE,aAAe5B,EAAKkC,YAAY9B,YAAYyB,MAE9C,wBAAIlC,UAAU,kCACXK,EAAKkC,YAAY9B,YAAYE,OAEhC,yBACEX,UAAU,sCACVmC,MAAO,CACLC,gBAAgB,OAAQ/B,EAAKkC,YAAY9B,YAAYC,cAAcU,gBAAgBiB,SAASC,IAA7E,OAGnB,0BAAMtC,UAAU,aAAhB,QACA,0BAAMA,UAAU,eAAhB,YAaX,IAAMwC,EAAS","file":"component---src-templates-project-js-d6986600abdddcbb061f.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst StyledWord = styled.span`\n  display: inline-block;\n  word-spacing: normal;\n  letter-spacing: normal;\n  line-height: 1;\n  overflow: hidden;\n\n  &:not(:last-child) {\n    padding-right: 1rem;\n  }\n\n  & span {\n    display: inline-block;\n    transform: translateY(150%);\n    opacity: 0;\n    transition: transform 1.2s ease, opacity 0.9s 0s ease,\n      -webkit-transform 0.6s ease;\n    transition-delay: ${props =>\n      props.transitionDelay ? props.transitionDelay : 0}ms;\n  }\n\n  &.page-loaded span {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`\n\nconst Slicer = ({ children }) => {\n  const [loaded, setLoaded] = useState(false)\n  const words = children.split(' ')\n\n  useEffect(() => {\n    setLoaded(true)\n  }, [])\n\n  return (\n    <>\n      {words.map((word, idx) => {\n        return (\n          <StyledWord\n            className={`word ${loaded ? 'page-loaded' : 'not-loaded'}`}\n            transitionDelay={idx * 150}\n            key={word}\n          >\n            <span>{word}</span>\n          </StyledWord>\n        )\n      })}\n    </>\n  )\n}\n\nexport default Slicer\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport Layout from '../components/layout'\nimport ScrollAnimation from 'react-animate-on-scroll'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\nimport Slicer from '../components/slicer'\n\nconst NavLink = styled(AniLink)`\n  text-decoration: none;\n  color: black;\n  width: 100%;\n  padding: 7rem 2rem 6rem;\n\n  @media (max-width: 768px) {\n    padding: 4rem 2rem;\n  }\n`\n\nconst Project = ({ data, location, pageContext }) => {\n  const {\n    featuredImage,\n    title,\n    client,\n    images,\n    services,\n  } = data.markdownRemark.frontmatter\n  const { html } = data.markdownRemark\n\n  return (\n    <Layout themeColor=\"white\">\n      <div className=\"project-hero\">\n        <div className=\"project-hero__left\">\n          <h1 className=\"project-hero__title\">\n            <Slicer>{title}</Slicer>\n          </h1>\n        </div>\n        <div className=\"project-hero__right\">\n          <div className=\"project-hero__information\">\n            <div className=\"project-hero__client\">\n              <em>Client:</em>\n              <span>{client}</span>\n            </div>\n            <div className=\"project-hero__services\">\n              <em>Services:</em>\n              <ul className=\"project-hero__services-list\">\n                {services &&\n                  services.map(item => {\n                    return <li>{item.service}</li>\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Img fluid={featuredImage.childImageSharp.fluid} />\n      <div className=\"project__wrapper\">\n        <div\n          className=\"content-body\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        ></div>\n        <ul className=\"project-images__list\">\n          {images.map(node => {\n            const { image, image_alt, half_image } = node\n            return (\n              <li\n                className={half_image ? 'image image-half' : 'image image-full'}\n              >\n                <ScrollAnimation key={`${image_alt}`} animateIn=\"fadeInUp\">\n                  <Img fluid={image.childImageSharp.fluid} alt={image_alt} />\n                </ScrollAnimation>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n      <div>\n        <div className=\"project-pagination__wrapper\">\n          <div className=\"project-pagination__previous\">\n            {data.previousProject && (\n              <>\n                <NavLink\n                  cover\n                  bg={'black'}\n                  direction=\"right\"\n                  to={`/projects/${data.previousProject.frontmatter.slug}`}\n                >\n                  <h3 className=\"project-pagination__previous-title\">\n                    {data.previousProject.frontmatter.title}\n                  </h3>\n                  <span className=\"direction\">Previous</span>\n                  <span className=\"left-arrow\">&larr;</span>\n                  <div\n                    className=\"project-pagination__previous-background\"\n                    style={{\n                      backgroundImage: `url(${data.previousProject.frontmatter.featuredImage.childImageSharp.original.src})`,\n                    }}\n                  ></div>\n                </NavLink>\n              </>\n            )}\n          </div>\n          <div className=\"project-pagination__next\">\n            {data.nextProject && (\n              <>\n                <NavLink\n                  cover\n                  bg={'black'}\n                  direction=\"right\"\n                  to={`/projects/${data.nextProject.frontmatter.slug}`}\n                >\n                  <h3 className=\"project-pagination__next-title\">\n                    {data.nextProject.frontmatter.title}\n                  </h3>\n                  <div\n                    className=\"project-pagination__next-background\"\n                    style={{\n                      backgroundImage: `url(${data.nextProject.frontmatter.featuredImage.childImageSharp.original.src})`,\n                    }}\n                  ></div>\n                  <span className=\"direction\">Next</span>\n                  <span className=\"right-arrow\">&rarr;</span>\n                </NavLink>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Project\n\nexport const pageQuery = graphql`\n  query($slug: String!, $next: String, $previous: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n        slug\n        client\n        services {\n          service\n        }\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 1480) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        images {\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1480) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n          image_alt\n          half_image\n        }\n      }\n      html\n    }\n    nextProject: markdownRemark(frontmatter: { slug: { eq: $next } }) {\n      frontmatter {\n        title\n        slug\n        featuredImage {\n          childImageSharp {\n            original {\n              src\n            }\n          }\n        }\n      }\n    }\n    previousProject: markdownRemark(frontmatter: { slug: { eq: $previous } }) {\n      frontmatter {\n        title\n        slug\n        featuredImage {\n          childImageSharp {\n            original {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}