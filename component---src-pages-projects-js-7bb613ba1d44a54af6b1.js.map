{"version":3,"sources":["webpack:///./src/components/common/ProjectCard.js","webpack:///./src/pages/projects.js"],"names":["StyledLink","styled","AniLink","StyledWord","span","props","transitionDelay","ProjectCard","title","featured_image","url","slug","to","cover","bg","direction","className","animateIn","delay","fluid","alt","class","split","map","word","idx","ProjectsContainer","div","ProjectsList","ul","projectsQuery","Projects","edges","data","allMarkdownRemark","themeColor","edge","node","frontmatter","featuredImage","key","childImageSharp"],"mappings":"+QAMMA,EAAaC,YAAOC,KAAV,8EAAGD,CAAH,2GAWVE,EAAaF,IAAOG,KAAV,8EAAGH,CAAH,iNAMM,SAAAI,GAAK,OAAIA,EAAMC,mBAsDtBC,EA/CK,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,eACtBC,EAAG,aAD8C,EAAXC,KAG5C,OACE,kBAACX,EAAD,CACEY,GAAIF,EACJG,OAAK,EACLC,GAAI,QACJC,UAAU,QACVC,UAAU,gBAEV,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,qBACZP,EACC,yBAAKO,UAAU,UACb,kBAAC,IAAD,CAAiBC,UAAU,aAAaC,MAAO,KAC7C,4BAAQF,UAAU,gCAChB,kBAAC,IAAD,CAAKG,MAAOV,EAAgBW,IAAKZ,OAIrC,MAEN,yBAAKQ,UAAU,wBACb,wBAAIA,UAAU,uBACZ,0BAAMK,MAAM,kBACTb,EAAMc,MAAM,KAAKC,KAAI,SAACC,EAAMC,GAC3B,OACE,kBAACtB,EAAD,CACEa,UAAU,OACVV,gBAAiB,IAAY,IAANmB,GAEtBD,QAMX,yBAAKR,UAAU,qBACb,kDC9DNU,EAAoBzB,IAAO0B,IAAV,kFAAG1B,CAAH,mCAKjB2B,EAAe3B,IAAO4B,GAAV,6EAAG5B,CAAH,mQA6DL6B,GAFEC,UA/BE,SAAC,GAIX,IAFkBC,EAEnB,EAHJC,KACEC,kBAAqBF,MAGvB,OACE,kBAAC,IAAD,CAAQG,WAAW,SACjB,kBAACT,EAAD,KACE,wCACA,kBAACE,EAAD,KACGI,GACC,sBAAIA,GAAJ,YAAcA,GAAd,YAAwBA,GAAxB,YAAkCA,IAAOT,KAAI,SAAAa,GAAS,IAAD,EACZA,EAAKC,KAAKC,YAAzC9B,EAD2C,EAC3CA,MAAO+B,EADoC,EACpCA,cAAe5B,EADqB,EACrBA,KAC9B,OACE,wBAAI6B,IAAK7B,GACP,kBAAC,IAAD,CAAiBM,UAAU,YACzB,kBAAC,EAAD,CACET,MAAOA,EACPG,KAAMA,EACNF,eAAgB8B,EAAcE,gBAAgBtB,iBAc1C","file":"component---src-pages-projects-js-7bb613ba1d44a54af6b1.js","sourcesContent":["import React from 'react'\nimport Img from 'gatsby-image'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\nimport styled from 'styled-components'\nimport ScrollAnimation from 'react-animate-on-scroll'\n\nconst StyledLink = styled(AniLink)`\n  text-decoration: none;\n  color: black;\n\n  .word-container {\n    display: inline-block;\n    line-height: 1;\n    overflow: hidden;\n  }\n`\n\nconst StyledWord = styled.span`\n  display: inline-block;\n  transform: translateY(150%);\n  opacity: 0;\n  transition: transform 1.2s ease, opacity 0.9s 0s ease,\n    -webkit-transform 0.6s ease;\n  transition-delay: ${props => props.transitionDelay}ms;\n\n  &:not(:last-child) {\n    padding-right: 0.75rem;\n  }\n`\n\nconst ProjectCard = ({ title, featured_image, slug }) => {\n  const url = `/projects/${slug}`\n\n  return (\n    <StyledLink\n      to={url}\n      cover\n      bg={'black'}\n      direction=\"right\"\n      className=\"project-card\"\n    >\n      <div className=\"project-card__container\">\n        <div className=\"project-card__top\">\n          {featured_image ? (\n            <div className=\"scaler\">\n              <ScrollAnimation animateIn=\"scale-down\" delay={150}>\n                <figure className=\"project-card__featured-image\">\n                  <Img fluid={featured_image} alt={title} />\n                </figure>\n              </ScrollAnimation>\n            </div>\n          ) : null}\n        </div>\n        <div className=\"project-card__bottom\">\n          <h2 className=\"project-card__title\">\n            <span class=\"word-container\">\n              {title.split(' ').map((word, idx) => {\n                return (\n                  <StyledWord\n                    className=\"word\"\n                    transitionDelay={150 + idx * 150}\n                  >\n                    {word}\n                  </StyledWord>\n                )\n              })}\n            </span>\n          </h2>\n          <div className=\"project-card__cta\">\n            <span>See project</span>\n          </div>\n        </div>\n      </div>\n    </StyledLink>\n  )\n}\n\nexport default ProjectCard\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport ScrollAnimation from 'react-animate-on-scroll'\nimport Layout from '../components/layout'\nimport ProjectCard from '../components/common/ProjectCard'\nimport styled from 'styled-components'\n\nconst ProjectsContainer = styled.div`\n  margin: 5rem 0;\n  padding: 0 2rem;\n`\n\nconst ProjectsList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  li {\n    flex-basis: 50%;\n\n    &:nth-child(even) {\n      margin-top: 7rem;\n\n      @media (max-width: 768px) {\n        margin-top: 1rem;\n      }\n    }\n\n    @media (max-width: 768px) {\n      flex-basis: 100%;\n      padding-top: 3rem;\n    }\n  }\n\n  .fadeInUp .word {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`\n\nconst Projects = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  return (\n    <Layout themeColor=\"white\">\n      <ProjectsContainer>\n        <h1>Projects</h1>\n        <ProjectsList>\n          {edges &&\n            [...edges, ...edges, ...edges, ...edges].map(edge => {\n              const { title, featuredImage, slug } = edge.node.frontmatter\n              return (\n                <li key={slug}>\n                  <ScrollAnimation animateIn=\"fadeInUp\">\n                    <ProjectCard\n                      title={title}\n                      slug={slug}\n                      featured_image={featuredImage.childImageSharp.fluid}\n                    />\n                  </ScrollAnimation>\n                </li>\n              )\n            })}\n        </ProjectsList>\n      </ProjectsContainer>\n    </Layout>\n  )\n}\n\nexport default Projects\n\nexport const projectsQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}