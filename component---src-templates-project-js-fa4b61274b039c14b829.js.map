{"version":3,"sources":["webpack:///./src/templates/project.js"],"names":["NavLink","styled","AniLink","Project","data","location","pageContext","markdownRemark","frontmatter","featuredImage","title","client","images","services","html","themeColor","className","map","item","service","fluid","childImageSharp","dangerouslySetInnerHTML","__html","node","image","image_alt","half_image","key","animateIn","alt","previousProject","cover","bg","direction","to","slug","style","backgroundImage","original","src","nextProject","pageQuery"],"mappings":"4FAAA,iKAQMA,EAAUC,YAAOC,KAAV,sEAAGD,CAAH,qHA0HEE,UA/GC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAkC,KAA5BC,SAA4B,EAAlBC,YAO7BF,EAAKG,eAAeC,aALtBC,EAFiD,EAEjDA,cACAC,EAHiD,EAGjDA,MACAC,EAJiD,EAIjDA,OACAC,EALiD,EAKjDA,OACAC,EANiD,EAMjDA,SAEMC,EAASV,EAAKG,eAAdO,KAER,OACE,kBAAC,IAAD,CAAQC,WAAW,SACjB,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,uBAAuBN,IAEvC,yBAAKM,UAAU,uBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,wBACb,uCACA,8BAAOL,IAET,yBAAKK,UAAU,0BACb,yCACA,wBAAIA,UAAU,+BACXH,GACCA,EAASI,KAAI,SAAAC,GACX,OAAO,4BAAKA,EAAKC,iBAO/B,kBAAC,IAAD,CAAKC,MAAOX,EAAcY,gBAAgBD,QAC1C,yBAAKJ,UAAU,oBACb,yBACEA,UAAU,eACVM,wBAAyB,CAAEC,OAAQT,KAErC,wBAAIE,UAAU,wBACXJ,EAAOK,KAAI,SAAAO,GAAS,IACXC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,WAC1B,OACE,wBACEX,UAAWW,EAAa,mBAAqB,oBAE7C,kBAAC,IAAD,CAAiBC,IAAG,GAAKF,EAAaG,UAAU,YAC9C,kBAAC,IAAD,CAAKT,MAAOK,EAAMJ,gBAAgBD,MAAOU,IAAKJ,WAO1D,6BACE,yBAAKV,UAAU,+BACb,yBAAKA,UAAU,gCACZZ,EAAK2B,iBACJ,oCACE,kBAAC/B,EAAD,CACEgC,OAAK,EACLC,GAAI,QACJC,UAAU,QACVC,GAAE,aAAe/B,EAAK2B,gBAAgBvB,YAAY4B,MAElD,wBAAIpB,UAAU,sCACXZ,EAAK2B,gBAAgBvB,YAAYE,OAEpC,0BAAMM,UAAU,aAAhB,YACA,0BAAMA,UAAU,cAAhB,KACA,yBACEA,UAAU,0CACVqB,MAAO,CACLC,gBAAgB,OAAQlC,EAAK2B,gBAAgBvB,YAAYC,cAAcY,gBAAgBkB,SAASC,IAAjF,UAO3B,yBAAKxB,UAAU,4BACZZ,EAAKqC,aACJ,oCACE,kBAACzC,EAAD,CACEgC,OAAK,EACLC,GAAI,QACJC,UAAU,QACVC,GAAE,aAAe/B,EAAKqC,YAAYjC,YAAY4B,MAE9C,wBAAIpB,UAAU,kCACXZ,EAAKqC,YAAYjC,YAAYE,OAEhC,yBACEM,UAAU,sCACVqB,MAAO,CACLC,gBAAgB,OAAQlC,EAAKqC,YAAYjC,YAAYC,cAAcY,gBAAgBkB,SAASC,IAA7E,OAGnB,0BAAMxB,UAAU,aAAhB,QACA,0BAAMA,UAAU,eAAhB,YAaX,IAAM0B,EAAS","file":"component---src-templates-project-js-fa4b61274b039c14b829.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport Layout from '../components/layout'\nimport ScrollAnimation from 'react-animate-on-scroll'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\n\nconst NavLink = styled(AniLink)`\n  text-decoration: none;\n  color: black;\n  width: 100%;\n  padding: 7rem 2rem 6rem;\n\n  @media (max-width: 768px) {\n    padding: 4rem 2rem;\n  }\n`\n\nconst Project = ({ data, location, pageContext }) => {\n  const {\n    featuredImage,\n    title,\n    client,\n    images,\n    services,\n  } = data.markdownRemark.frontmatter\n  const { html } = data.markdownRemark\n\n  return (\n    <Layout themeColor=\"white\">\n      <div className=\"project-hero\">\n        <div className=\"project-hero__left\">\n          <h1 className=\"project-hero__title\">{title}</h1>\n        </div>\n        <div className=\"project-hero__right\">\n          <div className=\"project-hero__information\">\n            <div className=\"project-hero__client\">\n              <em>Client:</em>\n              <span>{client}</span>\n            </div>\n            <div className=\"project-hero__services\">\n              <em>Services:</em>\n              <ul className=\"project-hero__services-list\">\n                {services &&\n                  services.map(item => {\n                    return <li>{item.service}</li>\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Img fluid={featuredImage.childImageSharp.fluid} />\n      <div className=\"project__wrapper\">\n        <div\n          className=\"content-body\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        ></div>\n        <ul className=\"project-images__list\">\n          {images.map(node => {\n            const { image, image_alt, half_image } = node\n            return (\n              <li\n                className={half_image ? 'image image-half' : 'image image-full'}\n              >\n                <ScrollAnimation key={`${image_alt}`} animateIn=\"fadeInUp\">\n                  <Img fluid={image.childImageSharp.fluid} alt={image_alt} />\n                </ScrollAnimation>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n      <div>\n        <div className=\"project-pagination__wrapper\">\n          <div className=\"project-pagination__previous\">\n            {data.previousProject && (\n              <>\n                <NavLink\n                  cover\n                  bg={'black'}\n                  direction=\"right\"\n                  to={`/projects/${data.previousProject.frontmatter.slug}`}\n                >\n                  <h3 className=\"project-pagination__previous-title\">\n                    {data.previousProject.frontmatter.title}\n                  </h3>\n                  <span className=\"direction\">Previous</span>\n                  <span className=\"left-arrow\">&larr;</span>\n                  <div\n                    className=\"project-pagination__previous-background\"\n                    style={{\n                      backgroundImage: `url(${data.previousProject.frontmatter.featuredImage.childImageSharp.original.src})`,\n                    }}\n                  ></div>\n                </NavLink>\n              </>\n            )}\n          </div>\n          <div className=\"project-pagination__next\">\n            {data.nextProject && (\n              <>\n                <NavLink\n                  cover\n                  bg={'black'}\n                  direction=\"right\"\n                  to={`/projects/${data.nextProject.frontmatter.slug}`}\n                >\n                  <h3 className=\"project-pagination__next-title\">\n                    {data.nextProject.frontmatter.title}\n                  </h3>\n                  <div\n                    className=\"project-pagination__next-background\"\n                    style={{\n                      backgroundImage: `url(${data.nextProject.frontmatter.featuredImage.childImageSharp.original.src})`,\n                    }}\n                  ></div>\n                  <span className=\"direction\">Next</span>\n                  <span className=\"right-arrow\">&rarr;</span>\n                </NavLink>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Project\n\nexport const pageQuery = graphql`\n  query($slug: String!, $next: String, $previous: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n        slug\n        client\n        services {\n          service\n        }\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 1480) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        images {\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1480) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n          image_alt\n          half_image\n        }\n      }\n      html\n    }\n    nextProject: markdownRemark(frontmatter: { slug: { eq: $next } }) {\n      frontmatter {\n        title\n        slug\n        featuredImage {\n          childImageSharp {\n            original {\n              src\n            }\n          }\n        }\n      }\n    }\n    previousProject: markdownRemark(frontmatter: { slug: { eq: $previous } }) {\n      frontmatter {\n        title\n        slug\n        featuredImage {\n          childImageSharp {\n            original {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}